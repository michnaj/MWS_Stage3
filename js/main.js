const systemMsg=document.getElementById("system_messages"),systemMsgTime=1e4;function hideSystemMessages(){systemMsg.setAttribute("aria-live","off"),systemMsg.classList.remove("open"),document.getElementById("system_messages-text").innerHTML=""}function showMessage(e){let t=document.getElementById("system_messages-text"),s=document.getElementById("system_messages-container");switch(s.classList.remove("error","info","success","warning"),e){case"invalid":t.innerHTML="Incorrect data in the form. Check data and try again.",s.classList.add("error");break;case"saved":t.innerHTML="Review saved. Thank you for your opinion.",s.classList.add("success");break;case"favorite-true":t.innerHTML="Your request to set the restaurant as favorite has been successfully submitted.",s.classList.add("success");break;case"favorite-false":t.innerHTML="Your request to set the restaurant as not favorite has been successfully submitted.",s.classList.add("success");break;case"favorite-failed":t.innerHTML="Connection error. Your request to set the restaurant favorite status has been not submitted.",s.classList.add("error");break;default:t.innerHTML="Something went wrong! Try again, please.",s.classList.add("info")}systemMsg.setAttribute("aria-live","assertive"),systemMsg.classList.add("open"),setTimeout(hideSystemMessages,systemMsgTime)}let restaurants,neighborhoods,cuisines;var map;document.getElementById("system_msg-close-button").addEventListener("click",e=>{e.preventDefault(),systemMsg.classList.remove("open"),systemMsg.setAttribute("aria-live","off")});var markers=[];let favoriteRestaurants=[];document.addEventListener("DOMContentLoaded",e=>{fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,a=t.selectedIndex,n=e[s].value,r=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,r,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");DBHelper.fetchFavoriteRestaurants((e,t)=>e?void 0:t?void(favoriteRestaurants=t):void 0),e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li");if(isRestaurantFavorite(e.id)){const e=document.createElement("div");e.className="favorite",e.innerHTML="â™¥",t.append(e)}const s=document.createElement("img");s.className="restaurant-img",s.setAttribute("alt",DBHelper.imageAltAttribute(e)),s.src=DBHelper.imageUrlForRestaurant(e,"sm"),t.append(s);const a=document.createElement("h3");a.innerHTML=e.name,t.append(a);const n=document.createElement("p");n.classList.add("neighborhood"),n.innerHTML=e.neighborhood,t.append(n);const r=document.createElement("p");r.innerHTML=e.address,t.append(r);const o=document.createElement("a");return o.innerHTML="View Details",o.href=DBHelper.urlForRestaurant(e),t.append(o),t}),isRestaurantFavorite=(e=>{let t=!1;return 0!==favoriteRestaurants.length&&favoriteRestaurants.forEach(s=>{s.id==e&&(t=!0)}),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});